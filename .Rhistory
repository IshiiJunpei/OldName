library(tidyverse)
list.files(path = "data/1363-4401/",
pattern = ".geojson",
full.names = T) %>%  # geojsonファイルをリスト化
map(st_read)
library(sf)
list.files(path = "data/1363-4401/",
pattern = ".geojson",
full.names = T)
list.files(path = "data/01363-4401/",
pattern = ".geojson",
full.names = T)
list.files(path = "data/01363-4401/",
pattern = ".geojson",
full.names = T) %>%  # geojsonファイルをリスト化
map(st_read)
tiban <-
list.files(path = "data/01363-4401/",
pattern = ".geojson",
full.names = T) %>%  # geojsonファイルをリスト化
map(st_read) %>%  # geojsonファイルにst_readを適用
bind_rows() %>%  # geojsonファイルを結合
st_transfor(3100)
tiban <-
list.files(path = "data/01363-4401/",
pattern = ".geojson",
full.names = T) %>%  # geojsonファイルをリスト化
map(st_read) %>%  # geojsonファイルにst_readを適用
bind_rows() %>%  # geojsonファイルを結合
st_transform(3100)
plot(tiban)
View(tiban)
tiban
# read data
tiban <-
list.files(path = "data/01363-4401/",
pattern = ".geojson",
full.names = T) %>%  # geojsonファイルをリスト化
map(st_read) %>%  # geojsonファイルにst_readを適用
bind_rows() %>%  # geojsonファイルを結合
st_transform(3100) %>%
dplyr::select(市町村名, 大字名, 丁目名, 小字名, 地番)
# read data
tiban <-
list.files(path = "data/01363-4401/",
pattern = ".geojson",
full.names = T) %>%  # geojsonファイルをリスト化
map(st_read) %>%  # geojsonファイルにst_readを適用
bind_rows() %>%  # geojsonファイルを結合
st_transform(3100) %>%
dplyr::select(市区町村名, 大字名, 丁目名, 小字名, 地番)
st_read("data/01363-4401/01363-4401-1.geojson") %>% plot()
library(mapview)
mapview(tiban)
tiban
j01 <-
st_read("data/01363-4401/01363-4401-1.geojson")
j02 <-
st_read("data/01363-4401/01363-4401-2.geojson")
j01 <-
st_read("data/01363-4401/01363-4401-1.geojson")
j02 <-
st_read("data/01363-4401/01363-4401-2.geojson")
bind_rows(j01, j02) %>%  mapview()
tiban <-
list.files(path = "data/01363-4401/",
pattern = ".geojson",
full.names = T) %>%  # geojsonファイルをリスト化
map(st_read)
tiban
tiban <-
list.files(path = "data/01363-4401/",
pattern = ".geojson",
full.names = T) %>%  # geojsonファイルをリスト化
map(st_read) %>%  # geojsonファイルにst_readを適用
bind_rows()
mapview(tiban)
# read data
tiban <-
list.files(path = "data/01363-4401/",
pattern = ".geojson",
full.names = T) %>%  # geojsonファイルをリスト化
map(st_read) %>%  # geojsonファイルにst_readを適用
bind_rows() %>%  # geojsonファイルを結合
st_transform(3100) %>%
dplyr::select(市区町村名, 大字名, 丁目名, 小字名, 地番)
mapview(tiban)
# write data
st_write(
obj = tiban,
driver = "GPKG",
append = FALSE ,
"output/asb_JGD2000utm54.gpkg")  # ファイルを書き出し
# write data
st_write(
obj = tiban,
driver = "GPKG",
append = FALSE ,
"output/01363/01363_JGD2000utm54.gpkg")  # ファイルを書き出し
tiban %>%
mutate(番地 = str_split(地番, pattern = "-"))
# 地番を番地と号に分ける
tiban_sep <-
tiban %>%
mutate(番地 = str_split(地番, pattern = "-"))
View(tiban_sep)
class(tiban_sep$番地)
tiban_sep$番地
tiban_sep$番地[1][1]
tiban_sep$番地[9][1]
tiban_sep$番地[9]
tiban_sep$番地[[9]][1][2]
tiban_sep$番地[[9]][2]
tiban_sep$番地[[9]][1]
library(tidyverse)
library(sf)
library(mapview)
# read data
tiban <-
list.files(path = "data/01363-4401/",
pattern = ".geojson",
full.names = T) %>%  # geojsonファイルをリスト化
map(st_read) %>%  # geojsonファイルにst_readを適用
bind_rows() %>%  # geojsonファイルを結合
st_transform(3100) %>%
dplyr::select(市区町村名, 大字名, 丁目名, 小字名, 地番)
banti <- str_split(tiban$地番, pattern = "-")
banti
banti[][1]
as.vector(banti)
as_tibble(banti)
as.data.frame(banti)
bind_rows(banti)
head(banti)
str(banti)
unlist(banti)
tiban %>%
mutate(番地 = separate(地番, c("番地", "号"), sep = "[-]"))
tiban %>%
mutate(番地 = separate(
col = 地番, into = c("番地", "号"), sep = "-"
))
separate(
data = tiban, col = 地番, into = c("番地", "号"), sep = "-"
)
tiban %>%
mutate(番地 = separate(
col = 地番, into = c("番地", "号"), sep = "-"
))
tiban %>%
mutate(番地 = separate(
data = tiban, col = 地番, into = c("番地", "号"), sep = "-"
))
banti <- str_split(tiban$地番, pattern = "-")
banti
banti <-
separate(
data = tiban, col = 地番, into = c("番地", "号"), sep = "-"
)
banti
banti <-
separate(
data = tiban, col = 地番, into = c("番", "号"), sep = "-"
)
# 地番を番地と号に分ける
tiban_bago <-
separate(
data = tiban, col = 地番, into = c("番", "号"), sep = "-"
)
mapview(tiban_bango)
# 地番を番地と号に分ける
tiban_bango <-
separate(
data = tiban, col = 地番, into = c("番", "号"), sep = "-"
)
mapview(tiban_bango)
View(tiban_bango)
library(tidyverse)
library(sf)
map
# データを結合する
# read data
map <-
list.files(path = "data/01363-4401/",
pattern = ".geojson",
full.names = T) %>%  # geojsonファイルをリスト化
map(st_read) %>%  # geojsonファイルにst_readを適用
bind_rows() %>%  # geojsonファイルを結合
st_transform(3100) %>% # 座標系をJGD2000UTMzone54に変換
dplyr::select(市区町村名, 大字名, 丁目名, 小字名, 地番)
map
library(tidyverse)
library(sf)
library(mapview)
# データを結合する
# read data
map <-
list.files(path = "data/01363-4401/",
pattern = ".geojson",
full.names = T) %>%  # geojsonファイルをリスト化
map(st_read) %>%  # geojsonファイルにst_readを適用
bind_rows() %>%  # geojsonファイルを結合
st_transform(3100) %>% # 座標系をJGD2000UTMzone54に変換
dplyr::select(市区町村名, 大字名, 丁目名, 小字名, 地番)
map
# 旧字名を結合する
# 地番を番地と号に分ける
map_bango <-
separate(
data = map, col = 地番, into = c("番", "号"), sep = "-"
)
map_bango
old_name
# 旧地名データを読み込み
old_name <-
read_csv(
"data/OldNameAssabu/OldName.csv",
locale = locale(encoding="utf8")
)
old_name
library(tidyverse)
library(sf)
library(mapview)
map_bango %>%
mutate(字名 = str_c(大字名, 丁目名, 小字名))
map_bango %>%
mutate(字名 = str_c(大字名, 丁目名, 小字名), sep = "")
map_bango %>%
mutate(字名 = str_c(大字名, 丁目名, 小字名, sep = ""))
map_bango %>%
unite(
data = map_bango,
col = "字名",         # 新しく作られる列の名前
c("大字名", "丁目名", "小字名"), # 結合する列
sep = "",                   # 区切りに使われる結合子
remove = FALSE,                # TRUEの場合、結合元の列をデータフレームから削除する
na.rm = TRUE                  # TRUEの場合、欠損値を無視して結合する
)
unite(
data = map_bango,
col = "字名",         # 新しく作られる列の名前
c("大字名", "丁目名", "小字名"), # 結合する列
sep = "",                   # 区切りに使われる結合子
remove = FALSE,                # TRUEの場合、結合元の列をデータフレームから削除する
na.rm = TRUE                  # TRUEの場合、欠損値を無視して結合する
)
# 大字名と小字名を結合するmutate casewhen
map_bango %>%
unite(
data = map_bango,
col = "字名",         # 新しく作られる列の名前
c("大字名", "丁目名", "小字名", "番"), # 結合する列
sep = "",                   # 区切りに使われる結合子
remove = FALSE,                # TRUEの場合、結合元の列をデータフレームから削除する
na.rm = TRUE                  # TRUEの場合、欠損値を無視して結合する
)
# 大字名と小字名を結合するmutate casewhen
map_bango %>%
unite(
data = map_bango,
col = "字名",         # 新しく作られる列の名前
c("大字名", "丁目名", "小字名", "番"), # 結合する列
sep = "",                   # 区切りに使われる記号（ここでは区切りなし）
remove = FALSE,                # TRUEの場合、結合元の列をデータフレームから削除する
na.rm = TRUE                  # TRUEの場合、欠損値を無視して結合する
)
map_bango
# 大字名と小字名を結合する
map_bango %>%
unite(
data = map_bango,
col = "字名",         # 新しく作られる列の名前
into = c("大字名", "丁目名", "小字名"), # 結合する列
sep = "",                   # 区切りに使われる記号（ここでは区切りなし）
remove = FALSE,                # TRUEの場合、結合元の列をデータフレームから削除する
na.rm = TRUE                  # TRUEの場合、欠損値を無視して結合する
)
# 大字名と小字名を結合する
map_bango %>%
unite(
data = map_bango,
col = "字名",         # 新しく作られる列の名前
c("大字名", "丁目名", "小字名"), # 結合する列
sep = "",                   # 区切りに使われる記号（ここでは区切りなし）
remove = FALSE,                # TRUEの場合、結合元の列をデータフレームから削除する
na.rm = TRUE                  # TRUEの場合、欠損値を無視して結合する
)
unite(
data = map_bango,
col = "字名",         # 新しく作られる列の名前
c("大字名", "丁目名", "小字名", "番"), # 結合する列
sep = "",                   # 区切りに使われる記号（ここでは区切りなし）
remove = FALSE,                # TRUEの場合、結合元の列をデータフレームから削除する
na.rm = TRUE                  # TRUEの場合、欠損値を無視して結合する
)
# 旧地名データを読み込み
old_name <-
read_csv(
"data/OldNameAssabu/OldName.csv",
locale = locale(encoding="utf8")
)
unite(
data = old_name,
col = "join_key",         # 新しく作られる列の名前
c("字", "地番"), # 結合する列
sep = "-",                   # 区切りに使われる記号（ここでは区切りなし）
remove = FALSE,                # TRUEの場合、結合元の列をデータフレームから削除する
na.rm = TRUE                  # TRUEの場合、欠損値を無視して結合する
)
# 結合キーになる住所地番号を結合
# Old_Tiban Data make join key
old_name_jk <-
unite(
data = old_name,
col = "join_key",         # 新しく作られる列の名前
c("字", "地番"), # 結合する列
sep = "-",                   # 区切りに使われる記号（ここでは区切りなし）
remove = FALSE,                # TRUEの場合、結合元の列をデータフレームから削除する
na.rm = TRUE                  # TRUEの場合、欠損値を無視して結合する
)
# Map Data make join key
map_jk <-
unite(
data = map_bango,
col = "join_key",         # 新しく作られる列の名前
c("大字名", "丁目名", "小字名", "番"), # 結合する列
sep = "-",                   # 区切りに使われる記号（ここでは区切りなし）
remove = FALSE,                # TRUEの場合、結合元の列をデータフレームから削除する
na.rm = TRUE                  # TRUEの場合、欠損値を無視して結合する
)
# Map Data make join key
map_jk <-
unite(
data = map_bango,
col = "join_key",
c("大字名", "丁目名", "小字名", "番"),
sep = "-",
remove = FALSE,
na.rm = TRUE
)
# Left Join
map_join <-
map_jk %>%
left_join(old_name_jk, by = "join_key") %>%
select(市区町村名, 字名, 番, 号, 旧地名)
map_join <-
map_jk %>%
left_join(old_name_jk, by = "join_key")
map_jk %>%
left_join(old_name_jk, by = "join_key")
# Left Join
map_join <-
map_jk %>%
left_join(old_name_jk, by = "join_key") %>%
select(市区町村名, 大字名, 丁目名, 小字名, 番, 号, 旧地名)
mapvew(map_join)
mapview(map_join)
View(map_join)
View(map_jk)
View(old_name_jk)
ma@_jk
map_jk
old_name_jk
map_join
# write data
st_write(
obj = map_join,
driver = "GPKG",
append = FALSE ,
"output/01363/AssabuOldName_JGD2000utm54.gpkg")  # ファイルを書き出し
map_join
map_join %>%
drop_na(旧地名) %>%
group_by(旧地名) %>%
summarise(Count = count(旧地名)) %>%
select(-Count)
map_join %>%
drop_na(旧地名) %>%
group_by(旧地名) %>%
summarise()
# 同じ旧地名を結合する
map_merge <-
map_join %>%
drop_na(旧地名) %>%
group_by(旧地名) %>%
summarise()
# write data
st_write(
obj = map_merge,
driver = "GPKG",
append = FALSE ,
"output/01363/AssabuOldName_JGD2000utm54.gpkg")  # ファイルを書き出し
map_merge
library(tidyverse)
library(sf)
library(mapview)
# write data kml
# 座標系変換
map_3857 <-
st_transform(map_merge, 3857)
st_write(
obj = map_merge,
driver = "KML",
append = FALSE ,
"output/01363/AssabuOldName_pseMer.kml")  # ファイルを書き出し
install.packages(c("data.table", "httpuv", "recipes", "tidyverse", "workflows", "xts"))
library(tidyverse)
library(sf)
library(mapview)
# データを結合する
# read data
map <-
list.files(path = "data/01363-4401_assabu/",
pattern = ".geojson",
full.names = T) %>%  # geojsonファイルをリスト化
map(st_read) %>%  # geojsonファイルにst_readを適用
bind_rows() %>%  # geojsonファイルを結合
st_transform(3100) %>% # 座標系をJGD2000UTMzone54に変換
dplyr::select(市区町村名, 大字名, 丁目名, 小字名, 地番)
# 旧地名データを読み込み
old_name <-
read_csv(
"data/OldNameAssabu/OldName.csv",
locale = locale(encoding="utf8")
)
# 結合キーになる住所地番号を結合
# Old_Tiban Data make join key
old_name_jk <-
unite(
data = old_name,
col = "join_key",         # 新しく作られる列の名前
c("字", "地番"),          # 結合する列
sep = "-",                   # 区切りに使われる記号（ここでは区切りなし）
remove = FALSE,                # TRUEの場合、結合元の列をデータフレームから削除する
na.rm = TRUE                  # TRUEの場合、欠損値を無視して結合する
)
# 旧字名を結合する
# 地番を番地と号に分ける
map_bango <-
separate(
data = map, col = 地番, into = c("番", "号"), sep = "-"
)
# Map Data make join key
map_jk <-
unite(
data = map_bango,
col = "join_key",
c("大字名", "丁目名", "小字名", "番"),
sep = "-",
remove = FALSE,
na.rm = TRUE
)
# Left Join
map_join <-
map_jk %>%
left_join(old_name_jk, by = "join_key")
# 同じ旧地名を結合する
map_merge <-
map_join %>%
drop_na(旧地名) %>%
group_by(旧地名) %>%
summarise()
# write data gpkd
st_write(
obj = map_merge,
driver = "GPKG",
append = FALSE ,
"output/01363/AssabuOldName_JGD2000utm54.gpkg")  # ファイルを書き出し
map
# 結合キーになる住所地番号を結合
# Old_Tiban Data make join key
old_name_jk <-
unite(
data = old_name,
col = "join_key",         # 新しく作られる列の名前
c("字", "地番"),          # 結合する列
sep = "-",                   # 区切りに使われる記号（ここでは区切りなし）
remove = FALSE,                # TRUEの場合、結合元の列をデータフレームから削除する
na.rm = TRUE                  # TRUEの場合、欠損値を無視して結合する
)
old_name_jk
map_merge
mapview(map_join)
